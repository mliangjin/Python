1. 创建项目
django-admin startproject tiantiansx
    1.1. 初始配置项目同名目录下settings.py文件
    模板的路径
    TEMPLATES = [
        'DIRS' = os.path.join(BASE_DLR, 'templates')
    ]
    静态文件的路径
    STATICFILES_DIRS = [
        os.path.join(BASE_DLR, 'static')
    ]
    配置数据库MySQL
    'ENGINE': 'django.db.backends.mysql',
    'NAME': 'tiantian',
    'USER': 'root',
    'PASSWORD': '123',
    'HOST': 'localhost',
    'POST': '3306'

2.创建应用
python manage.py startapp df_user
    2.1 初始配置应用所需的设置
        2.1.1 settings 中安装应用
        2.1.2 urls 中指向应用的 urls
    2.2 设计模型类
        class UserInfo(models.Model):
        name = models.CharField(max_length=20)
        pwd = models.CharField(max_length=128)
        email = models.CharField(max_length=20)
        shou = models.CharField(max_length=20, null=True)
        detaddr = models.CharField(max_length=100, null=True)
        youbian = models.CharField(max_length=6, null=True)
        phone = models.CharField(max_length=11, null=True)
        2.2.1 生成迁移文件
        python manage.py makemigrations
        2.2.2 迁移模型类到数据库
        python manage.py migrate
    2.3 配置模版
        2.3.1 分析模版结构，给模版做拆分，继承块
        {% extends "要继承的上一个html" %}
        {% block "填写块的名字" %}{% endblock "填写块的名字" %}
        2.3.2 给模版的连接配置正确的静态路径
        在src中，加上/static/
        2.3.3 配置模版的请求
        <form action="user/register_dispose/" method="POST">
        2.3.4 form 中填写 csrf
        {% csrf_token %}
    2.4 接收模版提交的数据
        2.4.1 配置模版提交数据接收路径的url 和 视图方法
        url(r'^register_dispose/', views.register_dispose),
        def register_dispose(request):
    2.5 解析数据方法
        def register_dispose(request):
        name = request.POST.get('user_name')
        pwd = request.POST.get('pwd')
        pwd2 = request.POST.get('cpwd')
        email = request.POST.get('email')
        # 再判断一次密码
        if pwd != pwd2:
            return redirect('/user/register/')    
        
        # 密码加密
        pwd3 = make_password(pwd)
        print(pwd3)

        # 保存到数据库
        user = models.UserInfo()
        user.name = name
        user.pwd = pwd3
        user.email = email
        user.save()
        # 重定向到登陆页面
        return redirect('/user/login/')
    2.6 组册中ajax请求判断用户名是否存在

